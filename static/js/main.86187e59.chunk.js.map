{"version":3,"sources":["components/worksheet.tsx","components/workspace.tsx","components/consolidations.tsx","components/app.tsx","index.tsx"],"names":["Worksheet","worksheet","makeTable","table","size","className","makeTableIndexes","map","r","c","renderCell","cell","master","type","excel","ValueType","Formula","renderFormulaCell","text","result","value","error","length","Array","from","_","i","eachRow","row","Math","max","eachCell","Workspace","topic","useState","template","setTemplate","consolidations","setConsolidations","subsidiaries","setSubsidiaries","branches","setBranches","useEffect","a","fetch","response","arrayBuffer","buffer","Workbook","xlsx","load","worksheets","console","log","alert","loadTemplate","loadWith","setState","files","Promise","all","file","readFile","workbook","w","loadSubsidiariesDropzone","useDropzone","onDrop","loadBranchesDropzone","save","Error","writeBuffer","saveAs","Blob","consolidate","useCallback","consolidateWorksheets","target","sources","addresses","expandAddresses","address","getCell","Number","name","validateCell","reduce","x","y","consolidateBranches","consolidateSubsidiaries","getRootProps","getInputProps","onClick","onSelect","replace","resolve","reject","reader","FileReader","onload","event","readAsArrayBuffer","ss","flatMap","expandAddress","s","includes","m","match","t","b","l","charCodeAt","indexes","z","String","fromCharCode","Consolidations","topics","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86187e59.chunk.js","sourcesContent":["import excel from 'exceljs'\nimport './worksheet.css'\n\ntype WorksheetProps = { worksheet: excel.Worksheet }\n\nexport const Worksheet = ({ worksheet }: WorksheetProps) => {\n  const { table, size } = makeTable(worksheet)\n  return (\n    <div className=\"worksheet-container\">\n      <table>\n        <tbody>\n          {makeTableIndexes(size[0]).map((r) => (\n            <tr key={r}>\n              {makeTableIndexes(size[1]).map((c) => (\n                <td key={c}>\n                  <div>{renderCell(table?.[r]?.[c])}</div>\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nconst renderCell = (cell: excel.Cell) => {\n  if (!cell) return undefined\n  if (cell.master !== cell) return undefined\n  if (cell.type === excel.ValueType.Formula) return renderFormulaCell(cell)\n  return cell.text\n}\n\nconst renderFormulaCell = (cell: excel.Cell) => {\n  const result = (cell?.value as excel.CellFormulaValue)?.result as excel.CellErrorValue | undefined\n  return result?.error ?? result\n}\n\nconst makeTableIndexes = (length: number) => Array.from({ length }).map((_, i) => i + 1)\n\nconst makeTable = (worksheet: excel.Worksheet) => {\n  const table: excel.Cell[][] = []\n  const size: [number, number] = [0, 0]\n  worksheet.eachRow((row, r) => {\n    size[0] = Math.max(size[0], r)\n    row.eachCell((cell, c) => {\n      size[1] = Math.max(size[1], c)\n      table[r] ??= []\n      table[r][c] = cell\n    })\n  })\n  return { table, size }\n}\n","import { useCallback, useEffect, useState, Dispatch, SetStateAction } from 'react'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\nimport { useDropzone } from 'react-dropzone'\nimport { Worksheet } from './worksheet'\nimport { saveAs } from 'file-saver'\nimport excel from 'exceljs'\n\nimport 'react-tabs/style/react-tabs.css'\nimport './workspace.css'\n\ntype WorkspaceProps = {\n  topic: string\n}\n\nexport const Workspace = ({ topic }: WorkspaceProps) => {\n  const [template, setTemplate] = useState<excel.Workbook>()\n  const [consolidations, setConsolidations] = useState<excel.Worksheet[]>([]) // 合并, 合并分公司\n  const [subsidiaries, setSubsidiaries] = useState<excel.Worksheet[]>([]) // 子公司\n  const [branches, setBranches] = useState<excel.Worksheet[]>([]) // 分公司\n\n  useEffect(() => {\n    const loadTemplate = async () => {\n      try {\n        const response = await fetch('/xlsx-templates/20XX' + topic + '（模板）.xlsx')\n        const buffer = await response.arrayBuffer()\n        const template = new excel.Workbook()\n        await template.xlsx.load(buffer)\n        const consolidations = [template.worksheets[0], template.worksheets[6]]\n        if (topic === '合并现金流量表') consolidations[1] = template.worksheets[7]\n        setTemplate(template)\n        setConsolidations(consolidations)\n        console.log('load template completed', template)\n      } catch (error) {\n        console.error(error)\n        alert('模板文件错误')\n      }\n    }\n    loadTemplate()\n  }, [topic])\n\n  const loadWith = (setState: Dispatch<SetStateAction<excel.Worksheet[]>>) => async (files: File[]) => {\n    try {\n      const worksheets = await Promise.all(\n        files.map(async (file) => {\n          const buffer = await readFile(file)\n          const workbook = new excel.Workbook()\n          await workbook.xlsx.load(buffer)\n          return workbook.worksheets[0]\n        }),\n      )\n      setState((w) => [...w, ...worksheets])\n    } catch (error) {\n      console.error('read xlsx file', error)\n      alert('文件格式错误')\n    }\n  }\n\n  const loadSubsidiariesDropzone = useDropzone({ onDrop: loadWith(setSubsidiaries) })\n  const loadBranchesDropzone = useDropzone({ onDrop: loadWith(setBranches) })\n\n  const save = async () => {\n    try {\n      if (!template) throw new Error()\n      const buffer = await template.xlsx.writeBuffer()\n      saveAs(new Blob([buffer]), topic + '.xlsx')\n    } catch (error) {\n      console.error('write xlsx file', error)\n      alert('模板文件错误')\n    }\n  }\n\n  const consolidate = useCallback(() => {\n    // TODO\n    const sum = (numbers: number[]) => numbers.reduce((x, y) => x + y, 0)\n    const validateCell = (cell: excel.Cell) => {\n      if (cell.type !== excel.ValueType.Number) throw new Error(`${cell.worksheet.name} ${cell.address}`)\n      return cell\n    }\n    // const consolidateCells = (worksheet: excel.Worksheet, target: string, sources: string[], sourcesNeg: string[]) => {\n    //   worksheet.getCell(target).value =\n    //     sum(expandAddresses(sources).map((address) => validateCell(worksheet.getCell(address)).value as number)) -\n    //     sum(expandAddresses(sourcesNeg).map((address) => validateCell(worksheet.getCell(address)).value as number))\n    // }\n    const consolidateWorksheets = (target: excel.Worksheet, sources: excel.Worksheet[], addresses: string[]) => {\n      for (const address of expandAddresses(addresses)) {\n        target.getCell(address).value = sum(\n          sources.map((worksheet) => validateCell(worksheet.getCell(address)).value as number),\n        )\n      }\n    }\n    const consolidateBranches = (addresses: string[]) => {\n      if (!branches.length) return\n      consolidateWorksheets(consolidations[1], branches, addresses)\n    }\n    const consolidateSubsidiaries = (addresses: string[]) => {\n      if (!subsidiaries.length) return\n      consolidateWorksheets(consolidations[0], [consolidations[1], ...subsidiaries], addresses)\n    }\n    // const consolidateBranchesInside = (target: string, sources: string[], sourcesNeg: string[] = []) => {\n    //   consolidateCells(consolidations[1], target, sources, sourcesNeg)\n    // }\n    // const consolidateSubsidiariesInside = (target: string, sources: string[], sourcesNeg: string[] = []) => {\n    //   consolidateCells(consolidations[0], target, sources, sourcesNeg)\n    // }\n    try {\n      if (topic === '合并利润表') {\n        consolidateBranches(['B5:C21', 'B23:C24', 'B26:C26', 'B28:C33'])\n        consolidateSubsidiaries(['B5:C21', 'B23:C24', 'B26:C26'])\n      }\n      if (topic === '合并现金流量表') {\n        consolidateBranches(['B6:C8', 'B10:C13', 'B17:C21', 'B23:C26', 'B30:C32', 'B34:C36', 'B41'])\n        consolidateSubsidiaries(['B6:C8', 'B10:C13', 'B17:C21', 'B23:C26', 'B30:C32', 'B34:C36', 'B41'])\n      }\n      if (topic === '合并资产负债表') {\n        consolidateBranches(['B6:B10', 'B11:B20', 'B23:B30', 'B31:B40'])\n        consolidateBranches(['E6:E10', 'E11:E20', 'E23:E30', 'E31:E40', 'E41:E47'])\n        // consolidateBranchesInside('B21', ['B6:B13', 'B16:B20'])\n        // consolidateBranchesInside('B41', ['B23:B40'])\n        // consolidateBranchesInside('B47', ['B21', 'B41'])\n        // consolidateBranchesInside('E21', ['E6:E15', 'E18:E20'])\n        // consolidateBranchesInside('E33', ['E23:E24', 'E27:E32'])\n        // consolidateBranchesInside('E34', ['E21', 'E33'])\n        // consolidateBranchesInside('E46', ['E36:E37', 'E42:E45', 'E40'], ['E41'])\n        // consolidateBranchesInside('E47', ['E34', 'E46'])\n        // consolidateBranchesInside('H43', ['E45'], ['F45'])\n        consolidateSubsidiaries(['B6:B10', 'B11:B20', 'B23:B30', 'B31:B40'])\n        consolidateSubsidiaries(['E6:E10', 'E11:E20', 'E23:E30', 'E31:E40', 'E41:E47'])\n        // consolidateSubsidiariesInside('B21', ['B6:B13', 'B16:B20'])\n        // consolidateSubsidiariesInside('B41', ['B23:B40'])\n        // consolidateSubsidiariesInside('B47', ['B21', 'B41'])\n        // consolidateSubsidiariesInside('E21', ['E6:E15', 'E18:E20'])\n        // consolidateSubsidiariesInside('E33', ['E23:E24', 'E27:E32'])\n        // consolidateSubsidiariesInside('E34', ['E21', 'E33'])\n        // consolidateSubsidiariesInside('E46', ['E36:E37', 'E42:E45', 'E40'], ['E41'])\n        // consolidateSubsidiariesInside('E47', ['E34', 'E46'])\n        // consolidateSubsidiariesInside('H43', ['E45'], ['F45'])\n      }\n    } catch (error) {\n      console.error('consolidate', error)\n      alert('文件格式错误: ' + error)\n    }\n    setConsolidations([...consolidations])\n    console.log('consolidate completed', consolidations, subsidiaries, branches)\n  }, [topic, consolidations, subsidiaries, branches])\n\n  return (\n    <div>\n      <div className=\"workspace-dropzone-container\">\n        <div {...loadSubsidiariesDropzone.getRootProps()}>\n          <input {...loadSubsidiariesDropzone.getInputProps()} />\n          <span>添加分公司</span>\n        </div>\n        <div {...loadBranchesDropzone.getRootProps()}>\n          <input {...loadBranchesDropzone.getInputProps()} />\n          <span>添加子公司</span>\n        </div>\n        <div onClick={save}>\n          <span>下载合并表</span>\n        </div>\n      </div>\n      <Tabs onSelect={consolidate}>\n        <TabList>\n          {consolidations.map((_, i) => (\n            <Tab key={i}>{[topic, topic.replace('合并', '合并分公司')][i]}</Tab>\n          ))}\n          {subsidiaries.map((_, i) => (\n            <Tab key={i}>子公司 {i + 1}</Tab>\n          ))}\n          {branches.map((_, i) => (\n            <Tab key={i}>分公司 {i + 1}</Tab>\n          ))}\n        </TabList>\n        {consolidations.map((worksheet, i) => (\n          <TabPanel key={i}>\n            <Worksheet worksheet={worksheet}></Worksheet>\n          </TabPanel>\n        ))}\n        {subsidiaries.map((worksheet, i) => (\n          <TabPanel key={i}>\n            <Worksheet worksheet={worksheet}></Worksheet>\n          </TabPanel>\n        ))}\n        {branches.map((worksheet, i) => (\n          <TabPanel key={i}>\n            <Worksheet worksheet={worksheet}></Worksheet>\n          </TabPanel>\n        ))}\n      </Tabs>\n    </div>\n  )\n}\n\nconst readFile = async (file: File) =>\n  new Promise<ArrayBuffer>((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = (event) => {\n      try {\n        resolve(event.target!.result! as ArrayBuffer)\n      } catch (error) {\n        reject(error)\n      }\n    }\n    reader.readAsArrayBuffer(file)\n  })\n\nconst expandAddresses = (ss: string[]) => ss.flatMap(expandAddress)\n\nconst expandAddress = (s: string): string[] => {\n  if (!s.includes(':')) return [s]\n  const m = s.match(/^([A-Z]+)([0-9]+):([A-Z]+)([0-9]+)$/)\n  if (!m || m.length < 5) throw new Error('Invalid range: ' + s)\n  const t = Number(m[2])\n  const b = Number(m[4])\n  const l = m[1].charCodeAt(0)\n  const r = m[3].charCodeAt(0)\n  const indexes = (a: number, z: number) => Array.from({ length: z - a + 1 }).map((_, i) => a + i)\n  return indexes(l, r).flatMap((c) => indexes(t, b).map((r) => String.fromCharCode(c) + String(r)))\n}\n","import { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\nimport { Workspace } from './workspace'\n\nexport const Consolidations = () => {\n  const topics = ['合并利润表', '合并现金流量表', '合并资产负债表']\n  return (\n    <div>\n      <Tabs>\n        <TabList>\n          {topics.map((topic, i) => (\n            <Tab key={i}>{topic}</Tab>\n          ))}\n        </TabList>\n        {topics.map((topic, i) => (\n          <TabPanel key={i}>\n            <Workspace topic={topic}></Workspace>\n          </TabPanel>\n        ))}\n      </Tabs>\n    </div>\n  )\n}\n","import { Consolidations } from './consolidations'\n\nexport const App = () => (\n  <>\n    <Consolidations></Consolidations>\n  </>\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './components/app'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}